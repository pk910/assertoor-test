name: Test1

on:
  workflow_dispatch:

concurrency:
  group: "tests-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  run_assertoor:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test:
        - "./kurtosis-test1.yaml"
        pair:
        - "teku-geth:prysm-nethermind"
        - "teku-nethermind:lighthouse-erigon"
        - "teku-erigon:nimbus-besu"
        - "teku-besu:lodestar-reth"
        #- "teku-reth:teku-geth"
        
        - "prysm-geth:lighthouse-nethermind"
        - "prysm-nethermind:nimbus-erigon"
        - "prysm-erigon:lodestar-besu"
        - "prysm-besu:teku-reth"
        #- "prysm-reth:prysm-geth"

        - "lighthouse-geth:nimbus-nethermind"
        - "lighthouse-nethermind:lodestar-erigon"
        - "lighthouse-erigon:teku-besu"
        - "lighthouse-besu:prysm-reth"
        #- "lighthouse-reth:lighthouse-geth"

        - "nimbus-geth:lodestar-nethermind"
        - "nimbus-nethermind:teku-erigon"
        - "nimbus-erigon:prysm-besu"
        - "nimbus-besu:lighthouse-reth"
        #- "nimbus-reth:nimbus-geth"

        - "lodestar-geth:teku-nethermind"
        - "lodestar-nethermind:prysm-erigon"
        - "lodestar-erigon:lighthouse-besu"
        - "lodestar-besu:nimbus-reth"
        #- "lodestar-reth:lodestar-geth"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Generate pair config
      run: |
        test_file="${{ matrix.test }}"
        pair="${{ matrix.pair }}"
        export cl1_type=$(echo "$pair" | sed 's/^\(.*\)-\(.*\):\(.*\)-\(.*\)$/\1/')
        export el1_type=$(echo "$pair" | sed 's/^\(.*\)-\(.*\):\(.*\)-\(.*\)$/\2/')
        export cl2_type=$(echo "$pair" | sed 's/^\(.*\)-\(.*\):\(.*\)-\(.*\)$/\3/')
        export el2_type=$(echo "$pair" | sed 's/^\(.*\)-\(.*\):\(.*\)-\(.*\)$/\4/')

        cl_image(){
          if [ "$1" == "teku" ]; then echo "consensys/teku:24.1.0"
          elif [ "$1" == "prysm" ]; then echo "gcr.io/prysmaticlabs/prysm/beacon-chain:HEAD-5cea6b,gcr.io/prysmaticlabs/prysm/validator:HEAD-5cea6b";
          elif [ "$1" == "lighthouse" ]; then echo "ethpandaops/lighthouse:unstable-38df87c";
          elif [ "$1" == "nimbus" ]; then echo "statusim/nimbus-eth2:multiarch-v24.1.1";
          elif [ "$1" == "lodestar" ]; then echo "ethpandaops/lodestar:unstable-9262064";
          fi
        }

        el_image(){
          if [ "$1" == "geth" ]; then echo "ethereum/client-go:v1.13.9"
          elif [ "$1" == "nethermind" ]; then echo "nethermind/nethermind:1.25.0";
          elif [ "$1" == "erigon" ]; then echo "thorax/erigon:v2.56.1";
          elif [ "$1" == "besu" ]; then echo "hyperledger/besu:24.1.0";
          elif [ "$1" == "reth" ]; then echo "ghcr.io/paradigmxyz/reth:v0.1.0-alpha.14";
          fi
        }

        export cl1_image="$(cl_image $cl1_type)"
        export el1_image="$(el_image $el1_type)"
        export cl2_image="$(cl_image $cl2_type)"
        export el2_image="$(el_image $el2_type)"

        echo "Client 1"
        echo "CL: $cl1_type  ($cl1_image)"
        echo "EL: $el1_type  ($el1_image)"
        echo "Client 2"
        echo "CL: $cl2_type  ($cl2_image)"
        echo "EL: $el2_type  ($el2_image)"

        mkdir -p ./temp
        envsubst < $test_file > ./temp/test-network.yaml

        echo ""
        cat ./temp/test-network.yaml

    - name: Setup Kurtosis
      run: |
        echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
        sudo apt update
        sudo apt install kurtosis-cli
        kurtosis analytics disable

    - name: Run Kurtosis
      run: |
        kurtosis run github.com/kurtosis-tech/ethereum-package --enclave assertoor-test --args-file ./temp/test-network.yaml

    - name: Get Service URLs
      id: services
      run: |
        enclave_dump=$(kurtosis enclave inspect assertoor-test)

        assertoor_url=$(echo "$enclave_dump" | grep assertoor | grep http | sed 's/.*\(http:\/\/[0-9.:]\+\).*/\1/')
        echo "assertoor_url: ${assertoor_url}"
        echo "assertoor_url=${assertoor_url}" >> $GITHUB_OUTPUT
    
    - name: Await test completion
      run: |
        YELLOW='\033[1;33m'
        GRAY='\033[0;37m'
        GREEN='\033[0;32m'
        RED='\033[0;31m'
        NC='\033[0m'

        assertoor_url="${{ steps.services.outputs.assertoor_url }}"

        # print assertor logs
        assertoor_container=$(docker container list | grep assertoor | sed 's/^\([^ ]\+\) .*$/\1/')
        docker logs -f $assertoor_container &

        # poll & check test status
        while true
        do
          pending_tests=0
          failed_tests=0
          running_test=""

          status_lines=()
          status_lines+=("$(date +'%Y-%m-%d %H:%M:%S')  Test Status:")

          tests=$(curl -s ${assertoor_url}/?json | jq -c ".tests[] | {index, name, status}")
          while read test; do
            test_id=$(echo "$test" | jq -r ".index")
            test_name=$(echo "$test" | jq -r ".name")
            test_status=$(echo "$test" | jq -r ".status")

            if [ "$test_status" == "pending" ]; then
              pending_tests=$(expr $pending_tests + 1)
              status_name="${GRAY}pending${NC}"
            elif [ "$test_status" == "running" ]; then
              pending_tests=$(expr $pending_tests + 1)
              running_test=$test_id
              status_name="${YELLOW}running${NC}"
            elif [ "$test_status" == "success" ]; then
              status_name="${GREEN}success${NC}"
            elif [ "$test_status" == "failure" ]; then
              failed_tests=$(expr $failed_tests + 1)
              status_name="${RED}failure${NC}"
            else
              status_name="$test_status"
            fi
            status_lines+=("  $status_name\t $test_name")

          done <<< $(echo "$tests")

          for status_line in "${status_lines[@]}"
          do
            echo -e "$status_line"
          done

          if [ $pending_tests -le 0 ]; then
            if [ $failed_tests -gt 0 ]; then 
              exit 1
            fi
            break
          fi

          sleep 60
        done
